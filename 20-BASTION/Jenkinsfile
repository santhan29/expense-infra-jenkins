pipeline {
    agent {
        label 'AGENT-1' 
    }
    options{
        timeout(time: 30, unit: 'MINUTES') 
        disableConcurrentBuilds() 
    }
    parameters{
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'select action')
    }
    stages {
        stage('Init and Plan') { 
            steps { 
                withAWS(region: 'us-east-1', credentials: 'aws-credentials') {
                    sh """
                        cd 20-BASTION
                        terraform init -reconfigure
                        terraform plan -out=tfplan
                  
                    """
                } 
            }
        }
        stage('Apply or Destroy') { 
            input {
                message "Should we continue to ${params.ACTION} ?"
                ok "Yes, we should"
            }
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-credentials') {
                    sh """
                        cd 20-BASTION
                        if [ ${params.ACTION} == 'apply' ]
                        then 
                            terraform apply -auto-approve tfplan
                        elif [ ${params.ACTION} == 'destroy' ]
                        then 
                            terraform destroy -auto-approve 
                        fi 
                    """
                }
            }
        }
    } 
    post{
        always{
            echo "this section runs always" 
            deleteDir() 
        }
        success{
            echo "this section runs when pipeline is success"
        }
        failure{
            echo "this section runs when pipeline is failure" 
        }
    }
} 